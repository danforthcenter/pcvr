% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pcvbox.R
\name{pcvBox}
\alias{pcvBox}
\title{Boxplot for plantCV data in wide format (each phenotype as a column)}
\usage{
pcvBox(
  df = df,
  x = "treatment",
  y = "area_pixels",
  fill = NULL,
  compare = FALSE,
  trait = "trait",
  value = "value",
  method = "t.test",
  showPoints = FALSE,
  ...
)
}
\arguments{
\item{df}{Data frame to use. Can be wide or long format from read.pcv}

\item{x}{X axis variable(s) name (grouping).
If multiple names are provided then the variables are combined with \code{interaction}.}

\item{y}{Y axis variable name (phenotype)}

\item{fill}{Optional variable to use for boxplot color.
If left NULL then the x variable is used.
If this is set to a different variable than x then care should be taken with compare.}

\item{compare}{Groups to compare. By default this is set to FALSE,
which corresponds to no testing. Other values of compare are passed to
fixCompare to make t.test comparisons using ggpubr.
In short, NULL will run all pairwise T tests, a single value of the X axis 
variable will compare that level to all other levels of the X variable, 
alternatively this can be a list as used by ggpubr: list(c("level1", "level2"),
 c("level1", "level3"))}

\item{trait}{If the data is in long format then `trait` is used to subset data for the phenotype Y.
Defaults to "trait".}

\item{value}{If the data is in long format then `value` is used for numeric values for the phenotype Y.
Defaults to "value".}

\item{method}{One of "t.test" or "wilcox.test".}

\item{showPoints}{Logical, should all points be shown? Defaults to FALSE.}

\item{...}{Additional parameters passed to geom_boxplot}
}
\value{
Returns a ggplot object.
}
\description{
Boxplot for plantCV data in wide format (each phenotype as a column)
}
\examples{

## Not run: 
\donttest{
sv<-read.pcv(
"https://raw.githubusercontent.com/joshqsumner/pcvrTestData/main/pcv4-single-value-traits.csv",
 reader="fread")
sv$genotype = substr(sv$barcode, 3,5)
sv$genotype = ifelse(sv$genotype == "002", "B73",
              ifelse(sv$genotype == "003", "W605S",
              ifelse(sv$genotype == "004", "MM", "Mo17")))
sv$fertilizer = substr(sv$barcode, 8, 8)
sv$fertilizer = ifelse(sv$fertilizer == "A", "100",
              ifelse(sv$fertilizer == "B", "50", "0"))
              
sv<-bw.time(sv, plantingDelay = 0, phenotype="area_pixels", cutoff=10,
 timeCol="timestamp", group=c("barcode", "rotation"), plot=TRUE)
 
pixels_per_cmsq <- 42.5^2   # pixel per cm^2
sv$area_cm2<-sv$area_pixels / pixels_per_cmsq
sv$height_cm <- sv$height_pixels/42.5

pcvBox(sv[sv$genotype=='MM' & sv$DAS==15, ],
  x="fertilizer", y="area_cm2", compare="0", showPoints = TRUE)
}
## End(Not run) 
}
\keyword{Bellwether,}
\keyword{ggplot}
