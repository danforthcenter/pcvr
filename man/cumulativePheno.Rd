% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cumulativePheno.R
\name{cumulativePheno}
\alias{cumulativePheno}
\title{Reduce phenotypes in longitudinal data to cumulative sums of phenotypes.}
\usage{
cumulativePheno(df, phenotypes = NULL, group = "barcode", timeCol = "DAS")
}
\arguments{
\item{df}{Dataframe to use, this is expected to be in wide format although in the future long may also be supported.}

\item{phenotypes}{A character vector of column names for the phenotypes that should be compared against control.}

\item{grouping}{A character vector of column names that identify groups in the data. Defaults to "barcode". These groups will be calibrated separately, with the exception of the group that identifies a control within the greater hierarchy.}

\item{control}{A column name for the variable to be used to select the control observations. If left NULL (the default) then this will be taken as the first string in the group argument.}

\item{controlGroup}{The level of the control variable to compare groups against.}

\item{method}{The method or methods to use, any of "proportion", "difference", or "zscore". These methods will be appended to the added column names ('phenotype_method').}
}
\value{
A dataframe with cumulative sum columns added for specified phenotypes
}
\description{
Often in bellwether experiments we are curious about the effect of some treatment vs control. For certain routes in analysing the data this requires considering phenotypes as relative differences compared to a control.
}
\examples{

sv<-read.pcv("https://media.githubusercontent.com/media/joshqsumner/pcvrTestData/main/smallPhenotyperRun.csv", mode="wide", singleValueOnly = T, reader="fread")
sv$genotype = substr(sv$barcode, 3,5)
sv$genotype = ifelse(sv$genotype == "002", "B73",
              ifelse(sv$genotype == "003", "W605S",
              ifelse(sv$genotype == "004", "MM", "Mo17")))
sv$fertilizer = substr(sv$barcode, 8, 8)
sv$fertilizer = ifelse(sv$fertilizer == "A", "100",
              ifelse(sv$fertilizer == "B", "50", "0"))
              
sv<-bw.time(sv, plantingDelay = 0, phenotype="area.pixels", cutoff=10, timeCol="timestamp", group=c("barcode", "rotation"), plot=T)
sv<-bw.outliers(sv, phenotype="area.pixels", group = c("DAS", "genotype", "fertilizer"), plotgroup = c("barcode", "rotation"))
phenotypes <- c('area.pixels', 'convex_hull_area.pixels', 'convex_hull_vertices', 'ellipse_angle.degrees', 'ellipse_eccentricity', 'ellipse_major_axis.pixels', 'ellipse_minor_axis.pixels', 'height.pixels', 'hue_circular_mean.degrees', 'hue_circular_std.degrees', 'hue_median.degrees', 'longest_path.pixels', 'perimeter.pixels', 'solidity', 'width.pixels')
phenoForm<-paste0("cbind(", paste0(phenotypes, collapse=", "), ")")
groupForm<-"DAS+DAP+barcode+genotype+fertilizer"
form<-as.formula(paste0(phenoForm, "~", groupForm))
sv<-aggregate(form, data=sv, mean, na.rm=T)
pixels_per_cmsq <- 42.5^2   # pixel per cm^2
sv$area_cm2<-sv$area.pixels / pixels_per_cmsq
sv$height_cm <- sv$height.pixels/42.5
df = sv
phenotypes = c("area_cm2", "height_cm")
group = c("barcode")
timeCol = "DAS"
df<-cumulativePheno(df, phenotypes, group, timeCol)

}
\keyword{single-value-traits}
