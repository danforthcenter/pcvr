---
title: "Pre-work: `pcvr` Installation"
format:
  html:
    embed-resources: true
    self-contained: true
editor: visual
---

## Installing R

If you do not already have R installed on your local computer then please install R from the [comprehensive R archive network (CRAN)](https://cran.r-project.org/).

## Installing Rstudio

If you do not have Rstudio or some IDE that you like to work with installed then please install Rstudio using the instructions [here](https://posit.co/download/rstudio-desktop/).

## Installing `pcvr`

Open Rstudio (or some IDE you prefer) and run the following command to install the `devtools` package from CRAN.

```{r, eval=F}
#| echo: true
#| eval: false
install.packages("devtools")
library(devtools) # should prevent download problems
# if you do get a download error run the next line and retry:
# options(download.file.method = "libcurl")
```

The `devtools` package makes developing your own R packages more straightforward and lets you easily install packages from places other than CRAN.

With `devtools` installed we can use `install_github` to install `pcvr` from the Danforth center github account. By default this will install package dependencies and will not build the bellwether vignette. See the \textbf{Optional Extras} and \textbf{Bellwether Vignette} sections in this document for examples of different installation options.

```{r, eval=F}
#| echo: true
#| eval: false
devtools::install_github("danforthcenter/pcvr")
```

### Test installation

Just to check that `pcvr` is installed and that your R session knows where to find it try running these 3 lines to load the package and generate a plot of some simulated data.

```{r}
#| echo: true
library(pcvr)
priors = list("A" = c(100, 130), "B" = c(10, 8), "C" = c(0.2, 0.1))
plotPrior(priors, "gompertz")[[1]]
```

## Optional Extras

By default `install_github` will install the dependencies for `pcvr`, but there are a handful of packages that are not true dependencies but which are very helpful for certain tasks. Currently the `brms`, `cmdstanr` and `caret` packages fall into this category, with `brms` (Bayesian Regression and Modeling using Stan) and `cmdstanr` being used for Bayesian growth modeling and `caret` begin used in partial least squares regression (PLSR). You can install all "Suggested" packages as well by using:

```{r}
#| eval: false
devtools::install_github("danforthcenter/pcvr", dependencies = T)
```

Alternatively you can just install `brms` and `cmdstanr` using instructions below.

```{r}
#| echo: true
#| eval: false
install.packages("brms")
```

`brms` specifies models in Stan which are then "transpiled" and executed using C++, so you need an interface to make R communicate with Stan/C++, `rstan` and `cmdstanr` are good options with `cmdstanr` generally having better features at this time.

```{r}
#| echo: true
#| eval: false
install.packages("cmdstanr", repos = c("https://mc-stan.org/r-packages/", getOption("repos")))
cmdstanr::install_cmdstan()
```

### Test `cmdstanr`

A simple model can be used to test the `cmdstanr` installation:

```{r}
#| echo: true
#| eval: false
?cmdstanr::cmdstanr_example
```

```{r}
#| echo: true
#| eval: false
cmdstanr::cmdstanr_example()
```

### Test `brms`

And now we can test the `brms` installation. Here we use a toy model of the mtcars dataset then a pcvr example.

```{r}
#| echo: true
#| eval: false
library(brms)
data(mtcars)
m <- brm(mpg ~ gear + hp, iter = 500, data = mtcars, backend = "cmdstanr")
```

```{r}
#| echo: true
#| eval: false
simdf <- growthSim("linear", n=20, t=25, params = list("A"=c(1.1, 0.95)))
ss <- growthSS(model = "linear", form=y~time|id/group, sigma="linear", df=simdf, priors = list("A"=1))
fit_test <- fitGrowth(ss, iter = 1000, cores = 2, chains = 2, backend = "cmdstanr")
```

## Bellwether Vignette

The Bellwether Vignette shows an example workflow to analyze single and multi value traits from plantCV output. The example data comes from a longitudinal experiment, but most of what is shown would be applicable to other designs as well. The vignette is not automatically built, but can be built on installation:

```{r}
#| eval: false
devtools::install_github("danforthcenter/pcvr", build_vignettes = T)
```

Now check the available vignettes in your browser with `browseVignettes`

```{r}
#| eval: false
browseVignettes("pcvr")
```
